*第九章主要属于过程信息，需要的是多操作和内在化，比喻法，模型纠错和图表法 练习

-我以前看过或听过这个知识吗？
 有

-我理解知识的含义吗？（至少是字面上的意思。）
	这章介绍了抽象化的思想，是程序更面向对象。开头介绍了网页的三个
 层，结构层、表现层、行为层，这三个层中表现和行为层是必定具有的，
 因为浏览器作为解释器载体，实际上就实现了这种表现层和行为层。
	style属性，可以让元素节点改变样式，如h1.style.color="grey";
 nodeName，返回元素节点对象的名称，String类型，大写表示
 js中的属性是没有"-"，因为"+""-"号都是保留字符，不能作为变量名
	DOM中可以改变CSS样式，CSS样式也有能做到改变行为的方法，但是都
 不推荐。这样会让每个层耦合度太高，为了解耦，用DOM操作节点获得CSS
 类是个不错的方法
	className属性，可以让元素节点对象获得class选择器
 例如：h1.className +=" odd";因为className直接用赋值操作会导致替
 换原有的class。
	
 
 
-我知道知识从何而来，与哪些知识有关系吗？
	这章的知识令人兴奋，因为是抽象化而让程序变得简单
 ，可读性也比较高。通过className可以和文档中引入外部的CSS样式进行
 关联。完美解决了，style属性不能获取外部CSS样式的缺点。通过classN
 -ame可以让程序做到自己该做的职责，就像Spring的AOP思想一样，类似
 的还有java的MVC。
	抽象化其实就是将繁重数据变成可操作的数据。黑盒封装了数据，然
 后使用黑盒达到目的。为了让函数的扩展性更高，职责更强，不如在力所
 能级的方向上，暴露参数，做到一系列的流水线工作
 
 
-我删除了那些不恰当的联系吗？我删除了那些错误结论吗？

-我将知识用到实际生活中了吗？